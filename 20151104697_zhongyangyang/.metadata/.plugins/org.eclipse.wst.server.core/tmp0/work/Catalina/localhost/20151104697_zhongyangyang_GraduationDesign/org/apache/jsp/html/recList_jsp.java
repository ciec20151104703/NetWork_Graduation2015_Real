/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.24
 * Generated at: 2019-04-01 13:01:27 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.html;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.qst.bean.RecommendBean;
import java.util.List;
import com.qst.service.RecommendService;
import com.qst.service.RecommendServiceimp;

public final class recList_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/standard.jar", Long.valueOf(1553064562566L));
    _jspx_dependants.put("jar:file:/E:/2015级内师大毕设git材料/NetWork_Graduation2015_Real/20151104697_zhongyangyang/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/20151104697_zhongyangyang_GraduationDesign/WEB-INF/lib/standard.jar!/META-INF/c.tld", Long.valueOf(1098682290000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("com.qst.service.RecommendService");
    _jspx_imports_classes.add("com.qst.bean.RecommendBean");
    _jspx_imports_classes.add("com.qst.service.RecommendServiceimp");
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title>商品信息列表</title>\r\n");
      out.write("<link href=\"../css/common.css\" rel=\"stylesheet\" type=\"text/css\" />\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("  function check(){\r\n");
      out.write("    var mymessage=confirm(\"确定要删除吗？\");  \r\n");
      out.write("    if(mymessage==true){\r\n");
      out.write("    \r\n");
      out.write("       return true;\r\n");
      out.write("    }  \r\n");
      out.write("    else if(mymessage==false){  \r\n");
      out.write("       return false;\r\n");
      out.write("    }   \r\n");
      out.write("    \r\n");
      out.write("  }\r\n");
      out.write("  \r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>  \r\n");
      out.write("<div align=\"right\">欢迎你，");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.username }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" &nbsp;&nbsp;&nbsp;<a href=\"logout.jsp\">退出</a></div>\r\n");
      out.write("<h2>商品信息列表</h2>\r\n");
      out.write("<p id=\"addRec\"><a href=\"recommend.jsp\"><input type=\"button\" value=\"添加商品\"></a></p>\r\n");
      out.write("\r\n");
      out.write("<table>\r\n");
      out.write("  <tr>\r\n");
      out.write("    <td class=\"listTable\" width=\"100\">编号</td>\r\n");
      out.write("    <td class=\"listTable\" width=\"100\">商品名</td>\r\n");
      out.write("    <td class=\"listTable\" width=\"100\">价格</td>\r\n");
      out.write("    <td id=\"profile\"  width=\"200\">图片</td>\r\n");
      out.write("    <td id=\"operate\">操作</td>\r\n");
      out.write("  </tr>\r\n");

   session.removeAttribute("list");
   RecommendService recService = new RecommendServiceimp();
   List<RecommendBean> list = recService.getAllRecommend();
   session.setAttribute("list", list);
   for(RecommendBean rec:list){
 
      out.write("\r\n");
      out.write("\r\n");
      out.write("  <tr>\r\n");
      out.write("   <td>");
      out.print(rec.getComid() );
      out.write(" </td>\r\n");
      out.write("   <td>");
      out.print(rec.getComname() );
      out.write(" </td>\r\n");
      out.write("   <td>");
      out.print(rec.getPrice() );
      out.write(" </td>\r\n");
      out.write("   <td>");
      out.print(rec.getPhotoname() );
      out.write(" </td>\r\n");
      out.write("   <td>\r\n");
      out.write("   <a href=\"modifyStu1.jsp?id=");
      out.print(rec.getIndexId() );
      out.write("\">修改&nbsp;</a>\r\n");
      out.write("   <a href=\"../Delstu?id=");
      out.print(rec.getIndexId() );
      out.write("\" onclick=\"return check()\">删除&nbsp;</a></td>\r\n");
      out.write("  </tr>\r\n");
} 
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</table>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
